{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/demo.service.ts","./src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;ACVwC;AACG;AACR;AA2BnC;IAQE,sBAAoB,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;IAAI,CAAC;IAElD,+BAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,+BAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,SAAS;QACpC,yDAAyD;QACzD,cAAI,IAAM,KAAI,CAAC,KAAK,GAAG,IAAI,GAAC;QAC5B,wDAAwD;QACxD,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB;QACzB,4DAA4D;QAC5D,cAAM,cAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,EAAjC,CAAiC,CACxC,CAAC;IACJ,CAAC;IAED,wCAAiB,GAAjB;QAAA,iBASC;QARC,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAC7C,cAAI;YACF,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACpB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;QACvB,CAAC;QACD,gEAAgE;QAChE,sEAAsE;SACvE,CAAC;IACJ,CAAC;IAED,iCAAU,GAAV,UAAW,IAAI;QAAf,iBAaC;QAZC,IAAI,IAAI,GAAG,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC;QACxB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,CACzC,cAAI;YACF,mBAAmB;YACnB,KAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,EACD,eAAK;YACH,OAAO,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;YACpC,MAAM,CAAC,2DAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,iCAAU,GAAV,UAAW,IAAI;QAAf,iBAYC;QAXC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,CACzC,cAAI;YACF,mBAAmB;YACnB,KAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,EACD,eAAK;YACH,OAAO,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;YACpC,MAAM,CAAC,2DAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,iCAAU,GAAV,UAAW,IAAI;QAAf,iBAcC;QAbC,EAAE,CAAC,CAAC,OAAO,CAAC,kCAAkC,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YAClE,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,CACzC,cAAI;gBAEF,KAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,MAAM,CAAC,IAAI,CAAC;YACd,CAAC,EACD,eAAK;gBACH,OAAO,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;gBACtC,MAAM,CAAC,2DAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACjC,CAAC,CACH,CAAC;QACJ,CAAC;IACH,CAAC;IAhFU,YAAY;QAzBxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,QAAQ,EAAC,83BAqBR;SACF,CAAC;yCASkC,kEAAW;OARlC,YAAY,CAiFxB;IAAD,mBAAC;CAAA;AAjFwB;;;;;;;;;;;;;;;;;;;;;;AC7B6C;AACZ;AACF;AACb;AACD;AAEM;AAShD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAPrB,uEAAQ,CAAC;YACN,OAAO,EAAE,CAAC,gFAAa,EAAE,mEAAW,EAAE,8EAAgB,CAAC;YACvD,YAAY,EAAE,CAAC,oEAAY,CAAC;YAC5B,SAAS,EAAE,CAAC,kEAAW,CAAC;YACxB,OAAO,EAAE,CAAC,6EAAsB,CAAC;YACjC,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC5B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;ACfmB;AACsB;AACpB;AAE3C,IAAM,WAAW,GAAG;IAChB,OAAO,EAAE,IAAI,yEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;CACnE,CAAC;AAGF;IAEI,qBAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;IACnC,CAAC;IAED,kEAAkE;IAClE,oEAAoE;IACpE,yBAAyB;IAEzB,0DAA0D;IAC1D,8BAAQ,GAAR;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACtC,CAAC;IAED,6EAA6E;IAC7E,kFAAkF;IAClF,uCAAiB,GAAjB;QACI,MAAM,CAAC,mEAAU,CAAC,QAAQ,CAC1B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,EAC3B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAC3B,CAAC;IACN,CAAC;IAED,6DAA6D;IAC7D,gCAAU,GAAV,UAAW,IAAI;QACX,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IAC3D,CAAC;IAED,wDAAwD;IACxD,gCAAU,GAAV,UAAW,IAAI;QACX,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IACpE,CAAC;IAED,2DAA2D;IAC3D,gCAAU,GAAV,UAAW,IAAI;QACX,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;IACpD,CAAC;IAtCQ,WAAW;QADvB,yEAAU,EAAE;yCAGgB,wEAAU;OAF1B,WAAW,CAwCvB;IAAD,kBAAC;CAAA;AAxCuB;;;;;;;;;ACRxB;AAAA;AAAA;AAA2E;AAE9B;AAE7C,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import {Component} from '@angular/core';\nimport {DemoService} from './demo.service';\nimport {Observable} from 'rxjs/Rx';\n\n@Component({\n  selector: 'demo-app',\n  template:`\n  <h1>Demo App</h1>\n  <p>This is a todo Angular application using a Node back-end and HTTPCLient for the API call code</p>\n  <h2>Bakery</h2>\n  <ul>\n    <li *ngFor=\"let food of foods\"><input type=\"text\" name=\"food-name\" [(ngModel)]=\"food.name\"><button (click)=\"updateFood(food)\">Save</button> <button (click)=\"deleteFood(food)\">Delete</button></li>\n  </ul>\n  <p>Create a new food: <input type=\"text\" name=\"food_name\" [(ngModel)]=\"food_name\"><button (click)=\"createFood(food_name)\">Save</button></p>\n  \n  <h2>Books and Movies</h2>\n  \n  <p>This is an example of loading data from multiple endpoints using Observable.forkJoin(). The API calls here are read-only.</p>\n  \n  <h3>Books</h3>\n  <ul>\n    <li *ngFor=\"let book of books\">{{book.title}}</li>\n  </ul>\n  <h3>Movies</h3>\n  <ul>\n    <li *ngFor=\"let movie of movies\">{{movie.title}}</li>\n  </ul>\n  `\n})\nexport class AppComponent {\n\n  public foods;\n  public books;\n  public movies;\n\n  public food_name;\n\n  constructor(private _demoService: DemoService) { }\n\n  ngOnInit() {\n    this.getFoods();\n    this.getBooksAndMovies();\n  }\n\n  getFoods() {\n    this._demoService.getFoods().subscribe(\n      // the first argument is a function which runs on success\n      data => { this.foods = data},\n      // the second argument is a function which runs on error\n      err => console.error(err),\n      // the third argument is a function which runs on completion\n      () => console.log('done loading foods')\n    );\n  }\n\n  getBooksAndMovies() {\n    this._demoService.getBooksAndMovies().subscribe(\n      data => {\n        this.books = data[0]\n        this.movies = data[1]\n      }\n      // No error or completion callbacks here. They are optional, but\n      // you will get console errors if the Observable is in an error state.\n    );\n  }\n\n  createFood(name) {\n    let food = {name: name};\n    this._demoService.createFood(food).subscribe(\n       data => {\n         // refresh the list\n         this.getFoods();\n         return true;\n       },\n       error => {\n         console.error(\"Error saving food!\");\n         return Observable.throw(error);\n       }\n    );\n  }\n\n  updateFood(food) {\n    this._demoService.updateFood(food).subscribe(\n       data => {\n         // refresh the list\n         this.getFoods();\n         return true;\n       },\n       error => {\n         console.error(\"Error saving food!\");\n         return Observable.throw(error);\n       }\n    );\n  }\n\n  deleteFood(food) {\n    if (confirm(\"Are you sure you want to delete \" + food.name + \"?\")) {\n      this._demoService.deleteFood(food).subscribe(\n         data => {\n          \n           this.getFoods();\n           return true;\n         },\n         error => {\n           console.error(\"Error deleting food!\");\n           return Observable.throw(error);\n         }\n      );\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { NgModule, CUSTOM_ELEMENTS_SCHEMA }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport {FormsModule} from '@angular/forms';\nimport {DemoService} from './demo.service'\n\nimport { AppComponent }  from './app.component';\n\n@NgModule({\n    imports: [BrowserModule, FormsModule, HttpClientModule],\n    declarations: [AppComponent],\n    providers: [DemoService],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {Injectable} from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {Observable} from 'rxjs/Observable';\n\nconst httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable()\nexport class DemoService {\n\n    constructor(private http:HttpClient) {\n    }\n\n    // NOTE: all API calls in this file use simple endpoints served by\n    // an Express app in the file app.js in the repo root. See that file\n    // for all back-end code.\n\n    // Uses http.get() to load data from a single API endpoint\n    getFoods() {\n        return this.http.get('/api/food');\n    }\n\n    // Uses Observable.forkJoin() to run multiple concurrent http.get() requests.\n    // The entire operation will result in an error state if any single request fails.\n    getBooksAndMovies() {\n        return Observable.forkJoin(\n        this.http.get('/api/books'),\n        this.http.get('/api/movies')\n        );\n    }\n\n    // send a POST request to the API to create a new data object\n    createFood(food) {\n        let body = JSON.stringify(food);\n        return this.http.post('/api/food/', body, httpOptions);\n    }\n\n    // send a PUT request to the API to update a data object\n    updateFood(food) {\n        let body = JSON.stringify(food);\n        return this.http.put('/api/food/' + food.id, body, httpOptions);\n    }\n\n    // send a DELETE request to the API to delete a data object\n    deleteFood(food) {\n        return this.http.delete('/api/food/' + food.id);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/demo.service.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}